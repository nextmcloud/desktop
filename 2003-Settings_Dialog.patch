diff --git a/src/gui/CMakeLists.txt b/src/gui/CMakeLists.txt
index 1968683e2..672f202fa 100644
--- a/src/gui/CMakeLists.txt
+++ b/src/gui/CMakeLists.txt
@@ -2,6 +2,9 @@ project(gui)
 find_package(Qt5 REQUIRED COMPONENTS Widgets Svg Qml Quick QuickControls2 Xml Network)
 find_package(KF5Archive REQUIRED)
 
+#NMC change, its needed to find the ui file in different location as the header file
+set(CMAKE_AUTOUIC_SEARCH_PATHS "${CMAKE_SOURCE_DIR}/src/gui")
+
 if(QUICK_COMPILER)
         find_package(Qt5QuickCompiler)
         set_package_properties(Qt5QuickCompiler PROPERTIES
@@ -191,6 +194,21 @@ set(client_SRCS
     syncconflictsmodel.cpp
     fileactivitylistmodel.h
     fileactivitylistmodel.cpp
+    nmcgui/nmcaccountsettings.h
+    nmcgui/nmcaccountsettings.cpp
+    nmcgui/nmcfolderwizard.h
+    nmcgui/nmcfolderwizard.cpp
+    nmcgui/nmcfolderwizardsourcepage.h
+    nmcgui/nmcfolderwizardsourcepage.cpp
+    nmcgui/nmcfolderwizardtargetpage.h
+    nmcgui/nmcfolderwizardtargetpage.cpp
+    nmcgui/nmcgeneralsettings.h
+    nmcgui/nmcgeneralsettings.cpp
+    nmcgui/nmcguiinterface.h
+    nmcgui/nmcnetworksettings.h
+    nmcgui/nmcnetworksettings.cpp
+    nmcgui/nmcsettingsdialog.h
+    nmcgui/nmcsettingsdialog.cpp
     filedetails/datefieldbackend.h
     filedetails/datefieldbackend.cpp
     filedetails/filedetails.h
diff --git a/src/gui/accountsettings.cpp b/src/gui/accountsettings.cpp
index 312e1fdf0..6496a369b 100644
--- a/src/gui/accountsettings.cpp
+++ b/src/gui/accountsettings.cpp
@@ -16,6 +16,7 @@
 #include "accountsettings.h"
 #include "common/syncjournaldb.h"
 #include "common/syncjournalfilerecord.h"
+#include "nmcgui/nmcfolderwizard.h"
 #include "qmessagebox.h"
 #include "ui_accountsettings.h"
 
@@ -742,7 +743,7 @@ void AccountSettings::slotAddFolder()
     const auto folderMan = FolderMan::instance();
     folderMan->setSyncEnabled(false); // do not start more syncs.
 
-    const auto folderWizard = new FolderWizard(_accountState->account(), this);
+    const auto folderWizard = new NMCFolderWizard(_accountState->account(), this);
     folderWizard->setAttribute(Qt::WA_DeleteOnClose);
 
     connect(folderWizard, &QDialog::accepted, this, &AccountSettings::slotFolderWizardAccepted);
@@ -753,7 +754,7 @@ void AccountSettings::slotAddFolder()
 
 void AccountSettings::slotFolderWizardAccepted()
 {
-    const auto folderWizard = qobject_cast<FolderWizard *>(sender());
+    const auto folderWizard = qobject_cast<NMCFolderWizard *>(sender());
     const auto folderMan = FolderMan::instance();
 
     qCInfo(lcAccountSettings) << "Folder wizard completed";
@@ -1111,7 +1112,7 @@ void AccountSettings::showConnectionLabel(const QString &message, QStringList er
         _ui->connectLabel->setToolTip({});
         _ui->connectLabel->setStyleSheet(errStyle);
     }
-    _ui->accountStatus->setVisible(!message.isEmpty());
+    //_ui->accountStatus->setVisible(!message.isEmpty());
 }
 
 void AccountSettings::slotEnableCurrentFolder(bool terminate)
@@ -1572,8 +1573,8 @@ void AccountSettings::refreshSelectiveSyncStatus()
         infoString += tr("There are folders that have grown in size beyond %1MB: %2").arg(folderSizeLimitString, becameBigFoldersString);
     }
 
-    _ui->selectiveSyncNotification->setText(infoString);
-    _ui->bigFolderUi->setVisible(!infoString.isEmpty());
+    //_ui->selectiveSyncNotification->setText(infoString);
+    //_ui->bigFolderUi->setVisible(!infoString.isEmpty());
 }
 
 bool AccountSettings::event(QEvent *e)
diff --git a/src/gui/accountsettings.h b/src/gui/accountsettings.h
index 1ddbc097d..6cdde927a 100644
--- a/src/gui/accountsettings.h
+++ b/src/gui/accountsettings.h
@@ -128,6 +128,9 @@ private slots:
     void checkClientSideEncryptionState();
     void removeActionFromEncryptionMessage(const QString &actionId);
 
+protected:
+    Ui::AccountSettings *_ui;
+
 private:
     bool event(QEvent *) override;
     QAction *addActionToEncryptionMessage(const QString &actionTitle, const QString &actionId);
@@ -137,8 +140,6 @@ private:
     /// Returns the alias of the selected folder, empty string if none
     [[nodiscard]] QString selectedFolderAlias() const;
 
-    Ui::AccountSettings *_ui;
-
     FolderStatusModel *_model;
     QUrl _OCUrl;
     bool _wasDisabledBefore = false;
diff --git a/src/gui/folderwizard.cpp b/src/gui/folderwizard.cpp
index 84fa76d04..f26bd571c 100644
--- a/src/gui/folderwizard.cpp
+++ b/src/gui/folderwizard.cpp
@@ -669,7 +669,7 @@ void FolderWizardSelectiveSync::virtualFilesCheckboxClicked()
 FolderWizard::FolderWizard(AccountPtr account, QWidget *parent)
     : QWizard(parent)
     , _folderWizardSourcePage(new FolderWizardLocalPath(account))
-    , _folderWizardSelectiveSyncPage(new FolderWizardSelectiveSync(account))
+    //, _folderWizardSelectiveSyncPage(new FolderWizardSelectiveSync(account))
 {
     setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
     setPage(Page_Source, _folderWizardSourcePage);
@@ -679,7 +679,7 @@ FolderWizard::FolderWizard(AccountPtr account, QWidget *parent)
         setPage(Page_Target, _folderWizardTargetPage);
         _folderWizardTargetPage->installEventFilter(this);
     }
-    setPage(Page_SelectiveSync, _folderWizardSelectiveSyncPage);
+    //setPage(Page_SelectiveSync, _folderWizardSelectiveSyncPage);
 
     setWindowTitle(tr("Add Folder Sync Connection"));
     setOptions(QWizard::CancelButtonOnLeft);
diff --git a/src/gui/folderwizard.h b/src/gui/folderwizard.h
index 867a50ec7..0863de43c 100644
--- a/src/gui/folderwizard.h
+++ b/src/gui/folderwizard.h
@@ -22,8 +22,8 @@
 #include "folder.h"
 #include "accountfwd.h"
 
-#include "ui_folderwizardsourcepage.h"
-#include "ui_folderwizardtargetpage.h"
+#include "nmcgui/nmcfolderwizardsourcepage.h"
+#include "nmcgui/nmcfolderwizardtargetpage.h"
 
 class QCheckBox;
 
@@ -61,6 +61,11 @@ public:
 
     void setFolderMap(const Folder::Map &fm) { _folderMap = fm; }
 
+    NMCFolderWizardSourcePage getUi()
+    {
+        return _ui;
+    }
+
 protected:
     void changeEvent(QEvent *) override;
 
@@ -70,7 +75,7 @@ protected slots:
 private:
     void changeStyle();
 
-    Ui_FolderWizardSourcePage _ui{};
+    NMCFolderWizardSourcePage _ui{};
     Folder::Map _folderMap;
     AccountPtr _account;
 };
@@ -93,6 +98,10 @@ public:
     void initializePage() override;
     void cleanupPage() override;
 
+    NMCFolderWizardTargetPage getUi(){
+        return _ui;
+    };
+
 protected slots:
     void showWarn(const QString & = QString()) const;
     void slotAddRemoteFolder();
@@ -119,7 +128,7 @@ private:
     LsColJob *runLsColJob(const QString &path);
     void recursiveInsert(QTreeWidgetItem *parent, QStringList pathTrail, QString path);
     bool selectByPath(QString path);
-    Ui_FolderWizardTargetPage _ui{};
+    NMCFolderWizardTargetPage _ui{};
     bool _warnWasVisible = false;
     AccountPtr _account;
     QTimer _lscolTimer;
@@ -170,7 +179,7 @@ public:
     bool eventFilter(QObject *watched, QEvent *event) override;
     void resizeEvent(QResizeEvent *event) override;
 
-private:
+protected:
     FolderWizardLocalPath *_folderWizardSourcePage;
     FolderWizardRemotePath *_folderWizardTargetPage = nullptr;
     FolderWizardSelectiveSync *_folderWizardSelectiveSyncPage;
diff --git a/src/gui/generalsettings.h b/src/gui/generalsettings.h
index 70a726142..8bd38f618 100644
--- a/src/gui/generalsettings.h
+++ b/src/gui/generalsettings.h
@@ -61,10 +61,11 @@ private slots:
     void slotToggleAutoUpdateCheck();
 #endif
 
+protected:
+    Ui::GeneralSettings *_ui;
+
 private:
     void customizeStyle();
-
-    Ui::GeneralSettings *_ui;
     QPointer<IgnoreListEditor> _ignoreEditor;
     bool _currentlyLoading = false;
 };
diff --git a/src/gui/networksettings.h b/src/gui/networksettings.h
index 8e3a97c44..8548e71ef 100644
--- a/src/gui/networksettings.h
+++ b/src/gui/networksettings.h
@@ -48,12 +48,11 @@ private slots:
 
 protected:
     void showEvent(QShowEvent *event) override;
+    Ui::NetworkSettings *_ui;
 
 private:
     void loadProxySettings();
     void loadBWLimitSettings();
-
-    Ui::NetworkSettings *_ui;
 };
 
 
diff --git a/src/gui/nmcgui/nmcaccountsettings.cpp b/src/gui/nmcgui/nmcaccountsettings.cpp
new file mode 100644
index 000000000..7730789ae
--- /dev/null
+++ b/src/gui/nmcgui/nmcaccountsettings.cpp
@@ -0,0 +1,76 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcaccountsettings.h"
+#include "accountsettings.h"
+#include "ui_accountsettings.h"
+#include "qdesktopservices.h"
+
+
+namespace OCC {
+
+NMCAccountSettings::NMCAccountSettings(AccountState *accountState, QWidget *parent)
+    : AccountSettings(accountState, parent)
+{
+    setDefaultSettings();
+    setLayout();
+    setLogic();
+}
+
+void NMCAccountSettings::setDefaultSettings()
+{
+    //Set default settings
+    _ui->encryptionMessage->setCloseButtonVisible(true);
+    _ui->selectiveSyncStatus->setVisible(false);
+    _ui->selectiveSyncNotification->setVisible(false);
+    _ui->accountStatus->setVisible(false);
+    _ui->bigFolderUi->setVisible(false);
+}
+
+void NMCAccountSettings::setLayout()
+{
+    //Fix layout
+    _ui->storageGroupBox->removeWidget(_ui->quotaInfoLabel);
+    _ui->storageGroupBox->removeWidget(_ui->quotaProgressBar);
+
+    auto *quotaVLayout = new QVBoxLayout(this);
+    auto *quota = new QLabel();
+    quota->setText(tr("USED_STORAGE_%1").arg(QString::number(_ui->quotaProgressBar->value() > 0 ? _ui->quotaProgressBar->value() : 0)));
+    quotaVLayout->addWidget(_ui->quotaInfoLabel);
+    quotaVLayout->addWidget(_ui->quotaProgressBar);
+    quotaVLayout->addWidget(quota);
+
+    auto *magentaHLayout = new QHBoxLayout(this);
+    magentaHLayout->addLayout(quotaVLayout);
+    auto *storageLinkButton = new QPushButton(this);
+    storageLinkButton->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    storageLinkButton->setFixedHeight(50);
+    connect(storageLinkButton, &QPushButton::clicked, this, [](){
+        QDesktopServices::openUrl(QUrl("https://cloud.telekom-dienste.de/tarife"));
+    });
+    storageLinkButton->setText(tr("STORAGE_EXTENSION"));
+    magentaHLayout->addWidget(storageLinkButton);
+
+    _ui->gridLayout->addLayout(magentaHLayout, 0, 0);
+}
+
+void NMCAccountSettings::setLogic()
+{
+
+}
+
+
+
+
+} // namespace OCC
diff --git a/src/gui/nmcgui/nmcaccountsettings.h b/src/gui/nmcgui/nmcaccountsettings.h
new file mode 100644
index 000000000..dac11ebdc
--- /dev/null
+++ b/src/gui/nmcgui/nmcaccountsettings.h
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_ACCOUNTSETTINGSMAGENTA_H
+#define MIRALL_ACCOUNTSETTINGSMAGENTA_H
+
+#include "nmcguiinterface.h"
+#include <accountsettings.h>
+
+namespace OCC {
+
+/**
+ * @brief The AccountSettingsMagenta class
+ * @ingroup gui
+ */
+class NMCAccountSettings : public AccountSettings, public NMCGuiInterface
+{
+    Q_OBJECT
+
+public:
+    explicit NMCAccountSettings(AccountState *accountState, QWidget *parent = nullptr);
+    ~NMCAccountSettings() = default;
+
+    // NMCGuiInterface interface
+protected:
+    void setDefaultSettings() override final;
+    void setLayout() override final;
+    void setLogic() override final;
+
+};
+
+
+} // namespace OCC
+#endif // MIRALL_ACCOUNTSETTINGSMAGENTA_H
diff --git a/src/gui/nmcgui/nmcfolderwizard.cpp b/src/gui/nmcgui/nmcfolderwizard.cpp
new file mode 100644
index 000000000..fc701c567
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizard.cpp
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+#include "nmcfolderwizard.h"
+
+/**
+ * Folder wizard itself
+ */
+
+namespace OCC {
+
+NMCFolderWizard::NMCFolderWizard(AccountPtr account, QWidget *parent)
+    :FolderWizard(account, parent)
+{
+    setWizardStyle(QWizard::ClassicStyle);
+    setOption(QWizard::NoBackButtonOnStartPage);
+    setOption(QWizard::NoBackButtonOnLastPage);
+    setButtonText(QWizard::FinishButton, tr("Finish"));
+
+    //Source page
+    auto sourceUi = _folderWizardSourcePage->getUi();
+    sourceUi.localFolderLineEdit->clear();
+    sourceUi.localFolderLineEdit->setPlaceholderText(tr("Please select a folder"));
+    sourceUi.setDefaultSettings();
+    sourceUi.setLayout();
+
+    //Target page
+    auto targetUi = _folderWizardTargetPage->getUi();
+    targetUi.setDefaultSettings();
+    targetUi.setLayout();
+}
+
+
+
+} // end namespace
diff --git a/src/gui/nmcgui/nmcfolderwizard.h b/src/gui/nmcgui/nmcfolderwizard.h
new file mode 100644
index 000000000..b9b61fa4b
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizard.h
@@ -0,0 +1,38 @@
+/*
+ * Copyright (C) by Duncan Mac-Vicar P. <duncan@kde.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NMCFolderWizard_H
+#define MIRALL_NMCFolderWizard_H
+
+#include "folderwizard.h"
+
+/**
+ * @brief The NMCFolderWizard class
+ * @ingroup gui
+ */
+
+namespace OCC {
+
+class NMCFolderWizard : public FolderWizard
+{
+    Q_OBJECT
+public:
+    explicit NMCFolderWizard(OCC::AccountPtr account, QWidget *parent = nullptr);
+    ~NMCFolderWizard() = default;
+};
+
+
+} // namespace OCC
+
+#endif
diff --git a/src/gui/nmcgui/nmcfolderwizardsourcepage.cpp b/src/gui/nmcgui/nmcfolderwizardsourcepage.cpp
new file mode 100644
index 000000000..4589d2ac4
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizardsourcepage.cpp
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcfolderwizardsourcepage.h"
+#include "theme.h"
+
+namespace OCC {
+
+NMCFolderWizardSourcePage::NMCFolderWizardSourcePage()
+    :FolderWizardSourcePage()
+{
+
+}
+
+void NMCFolderWizardSourcePage::setDefaultSettings()
+{
+    groupBox->setVisible(false);
+}
+
+void NMCFolderWizardSourcePage::setLayout()
+{
+    QLabel *stepLabel = new QLabel();
+    stepLabel->setText(QObject::tr("Step 1 from 2: Local Folder"));
+    stepLabel->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    stepLabel->setStyleSheet("QLabel{color: #E20074}");
+    gridLayout_2->setMargin(0);
+    gridLayout_2->addWidget(stepLabel, 0,0);
+    QLabel *textLabel = new QLabel();
+    textLabel->setText(QObject::tr("Select a folder on your hard drive, that will be connected to your %1 and permanently connected. All files and sub-folders are automatically uploaded and "
+                                   "synchronized.").arg(Theme::instance()->appNameGUI()));
+    textLabel->setWordWrap(true);
+    textLabel->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    gridLayout_2->addWidget(textLabel, 1,0);
+
+    gridLayout_2->removeWidget(localFolderLineEdit);
+    localFolderLineEdit->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    gridLayout_2->addWidget(localFolderLineEdit, 2,0);
+
+    gridLayout_2->removeWidget(localFolderChooseBtn);
+    localFolderChooseBtn->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
+    gridLayout_2->addWidget(localFolderChooseBtn, 3,0);
+
+    gridLayout_2->removeWidget(warnLabel);
+    gridLayout_2->addWidget(warnLabel, 4,0);
+
+    gridLayout_2->removeItem(verticalSpacer);
+    gridLayout_2->addItem(verticalSpacer, 5,0);
+}
+
+void NMCFolderWizardSourcePage::setLogic()
+{
+}
+
+} // end namespace
+
+
+
diff --git a/src/gui/nmcgui/nmcfolderwizardsourcepage.h b/src/gui/nmcgui/nmcfolderwizardsourcepage.h
new file mode 100644
index 000000000..157b3edf3
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizardsourcepage.h
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) by Duncan Mac-Vicar P. <duncan@kde.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NMCFolderWizardSourcePage_H
+#define MIRALL_NMCFolderWizardSourcePage_H
+
+#include "nmcgui/nmcguiinterface.h"
+#include "ui_folderwizardsourcepage.h"
+
+/**
+ * @brief The NMCFolderWizardSourcePage class
+ * @ingroup gui
+ */
+
+namespace OCC {
+
+class NMCFolderWizardSourcePage : public ::Ui::FolderWizardSourcePage, public NMCGuiInterface
+{
+
+public:
+    explicit NMCFolderWizardSourcePage();
+    ~NMCFolderWizardSourcePage() = default;
+
+    // NMCGuiInterface interface
+public:
+    void setDefaultSettings() override;
+    void setLayout() override;
+    void setLogic() override;
+};
+
+
+} // namespace OCC
+
+#endif
diff --git a/src/gui/nmcgui/nmcfolderwizardtargetpage.cpp b/src/gui/nmcgui/nmcfolderwizardtargetpage.cpp
new file mode 100644
index 000000000..4179550af
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizardtargetpage.cpp
@@ -0,0 +1,80 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+#include "nmcfolderwizardtargetpage.h"
+#include "theme.h"
+
+
+namespace OCC {
+
+NMCFolderWizardTargetPage::NMCFolderWizardTargetPage()
+    :Ui::FolderWizardTargetPage()
+{
+}
+
+void NMCFolderWizardTargetPage::setDefaultSettings()
+{
+    folderEntry->setVisible(false);
+    warnFrame->setVisible(false);
+    groupBox->setVisible(false);
+}
+
+void NMCFolderWizardTargetPage::setLayout()
+{
+    gridLayout_6->setMargin(0);
+
+    QLabel *stepLabel = new QLabel();
+    stepLabel->setText(QObject::tr("Step 2 from 2: Directory in your CLOUD"));
+    stepLabel->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    stepLabel->setStyleSheet("QLabel{color: #E20074}");
+
+    gridLayout_6->addWidget(stepLabel, 0,0);
+
+    QLabel *textLabel1 = new QLabel();
+    textLabel1->setText(QObject::tr("Both folders are permanently linked, the respective contents are automatically compared and updated.")
+                            .arg(Theme::instance()->appNameGUI()));
+    textLabel1->setWordWrap(true);
+    textLabel1->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    gridLayout_6->addWidget(textLabel1, 1,0);
+
+    QLabel *textLabel2 = new QLabel();
+    textLabel2->setText(QObject::tr("Please select or create a target folder in your %1, where the content will be uploaded and synchronized.")
+                           .arg(Theme::instance()->appNameGUI()));
+    textLabel2->setWordWrap(true);
+    textLabel2->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
+    gridLayout_6->addWidget(textLabel2, 2,0);
+
+    gridLayout_6->removeWidget(folderTreeWidget);
+    gridLayout_6->addWidget(folderTreeWidget, 3,0);
+
+    QHBoxLayout *hLayout = new QHBoxLayout();
+    gridLayout_6->removeWidget(refreshButton);
+    gridLayout_6->removeWidget(addFolderButton);
+    refreshButton->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
+    hLayout->addWidget(refreshButton);
+    addFolderButton->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
+    hLayout->addWidget(addFolderButton);
+    QSpacerItem *spacer = new QSpacerItem(1,1, QSizePolicy::Expanding, QSizePolicy::Fixed);
+    hLayout->addSpacerItem(spacer);
+    gridLayout_6->addLayout(hLayout, 4,0);
+
+    gridLayout_6->removeWidget(warnFrame);
+    gridLayout_6->addWidget(warnFrame, 5,0);
+}
+
+void NMCFolderWizardTargetPage::setLogic()
+{
+}
+
+
+} // end namespace
diff --git a/src/gui/nmcgui/nmcfolderwizardtargetpage.h b/src/gui/nmcgui/nmcfolderwizardtargetpage.h
new file mode 100644
index 000000000..164b2037e
--- /dev/null
+++ b/src/gui/nmcgui/nmcfolderwizardtargetpage.h
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) by Duncan Mac-Vicar P. <duncan@kde.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NMCFolderWizardTargetPage_H
+#define MIRALL_NMCFolderWizardTargetPage_H
+
+#include "nmcgui/nmcguiinterface.h"
+#include "ui_folderwizardtargetpage.h"
+
+/**
+ * @brief The NMCFolderWizardTargetPage class
+ * @ingroup gui
+ */
+
+namespace OCC {
+
+class NMCFolderWizardTargetPage : public ::Ui::FolderWizardTargetPage, public NMCGuiInterface
+{
+
+public:
+    explicit NMCFolderWizardTargetPage();
+    ~NMCFolderWizardTargetPage() = default;
+
+    // NMCGuiInterface interface
+    void setDefaultSettings() override final;
+    void setLayout() override final;
+    void setLogic() override final;
+};
+
+
+} // namespace OCC
+
+#endif
diff --git a/src/gui/nmcgui/nmcgeneralsettings.cpp b/src/gui/nmcgui/nmcgeneralsettings.cpp
new file mode 100644
index 000000000..0544ee5e7
--- /dev/null
+++ b/src/gui/nmcgui/nmcgeneralsettings.cpp
@@ -0,0 +1,165 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcgeneralsettings.h"
+#include "generalsettings.h"
+#include "nmcconfigfile.h"
+#include "ui_generalsettings.h"
+#include "theme.h"
+
+
+namespace OCC {
+
+NMCGeneralSettings::NMCGeneralSettings(QWidget *parent)
+    : GeneralSettings(parent)
+{
+    setDefaultSettings();
+    setLayout();
+    setLogic();
+}
+
+void NMCGeneralSettings::setDefaultSettings()
+{
+    //Set default settings
+    //General settings
+    _ui->autostartCheckBox->setCheckState(Qt::Checked);
+    _ui->monoIconsCheckBox->setCheckState(Qt::Unchecked);
+    _ui->serverNotificationsCheckBox->setCheckState(Qt::Unchecked);
+    _ui->callNotificationsCheckBox->setCheckState(Qt::Unchecked);
+    //Advanced settings
+    _ui->newFolderLimitCheckBox->setCheckState(Qt::Unchecked);
+    //Info settings
+    _ui->aboutAndUpdatesGroupBox->setTitle(tr("Update"));
+    //Hide unsupported settings
+    //General settings
+    _ui->monoIconsCheckBox->setVisible(false);
+    _ui->callNotificationsCheckBox->setVisible(false);
+    //Advanced settings
+    _ui->groupBox->setVisible(false);
+    //Info settings
+    _ui->aboutAndUpdatesGroupBox->setVisible(false);
+}
+
+void NMCGeneralSettings::setLayout()
+{
+    //Fix layout
+    //General settings
+    _ui->generalGroupBox->layout()->removeWidget(_ui->serverNotificationsCheckBox);
+    static_cast<QGridLayout *>(_ui->generalGroupBox->layout())->addWidget(_ui->serverNotificationsCheckBox, 1, 0);
+    //Advanced settings
+    _ui->horizontalLayout_3->layout()->removeWidget(_ui->newFolderLimitCheckBox);
+    _ui->horizontalLayout_3->layout()->removeWidget(_ui->newFolderLimitSpinBox);
+    _ui->horizontalLayout_3->layout()->removeWidget(_ui->label);
+
+    QWidget *folderLimit = new QWidget(this);
+    auto *folderHBoxLayout = new QHBoxLayout(this);
+    folderLimit->setLayout(folderHBoxLayout);
+    folderHBoxLayout->addWidget(_ui->newFolderLimitCheckBox);
+    folderHBoxLayout->addWidget(_ui->newFolderLimitSpinBox);
+    folderHBoxLayout->addWidget(_ui->label);
+    folderHBoxLayout->setContentsMargins(0,0,0,0);
+
+    QGroupBox *advancedBox = new QGroupBox(this);
+    advancedBox->setTitle(_ui->groupBox->title());
+    auto *advancedVBoxLayout = new QVBoxLayout(this);
+    advancedBox->setLayout(advancedVBoxLayout);
+    advancedVBoxLayout->addWidget(folderLimit);
+    _ui->gridLayout_3->addWidget(advancedBox, 2, 0);
+
+    //Updates
+    _ui->updatesContainer->layout()->removeWidget(_ui->autoCheckForUpdatesCheckBox);
+    QGroupBox *aboutBox = new QGroupBox(this);
+    aboutBox->setTitle(_ui->aboutAndUpdatesGroupBox->title());
+    aboutBox->setLayout(new QVBoxLayout);
+    aboutBox->layout()->addWidget(_ui->autoCheckForUpdatesCheckBox);
+    _ui->gridLayout_3->addWidget(aboutBox, 3, 0);
+
+    //Datenschutz
+    QGroupBox *dataProtectionBox = new QGroupBox(this);
+    dataProtectionBox->setTitle(tr("DATA_PROTECTION"));
+    dataProtectionBox->setLayout(new QVBoxLayout);
+    dataProtectionBox->layout()->setContentsMargins(12,12,12,12); //Like in Nextcloud .ui file
+    dataProtectionBox->layout()->setSpacing(5);
+
+    auto *dataAnalysisCheckBox = new QCheckBox(this);
+    dataAnalysisCheckBox->setText(tr("DATA_ANALYSIS"));
+    dataProtectionBox->layout()->addWidget(dataAnalysisCheckBox);
+    dataProtectionBox->layout()->addItem(new QSpacerItem(1,5,QSizePolicy::Fixed,QSizePolicy::Fixed));
+    connect(dataAnalysisCheckBox, &QAbstractButton::toggled, this, [](bool toggle){
+        NMCConfigFile cfgFile;
+        cfgFile.setTransferUsageData(toggle, QString());
+    });
+    NMCConfigFile cfgFile;
+    dataAnalysisCheckBox->setChecked(cfgFile.transferUsageData());
+
+    auto *dataAnalysisImpressum = new QLabel(this);
+    dataAnalysisImpressum->setText(QString("<a href=\"https://www.telekom.de/impressum/\"><span style=\"color:#ea0a8e\">%1</span></a>").arg(tr("IMPRESSUM")));
+    dataAnalysisImpressum->setTextFormat(Qt::RichText);
+    dataAnalysisImpressum->setTextInteractionFlags(Qt::TextBrowserInteraction);
+    dataAnalysisImpressum->setOpenExternalLinks(true);
+    dataAnalysisImpressum->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    dataProtectionBox->layout()->addWidget(dataAnalysisImpressum);
+
+    auto *dataAnalysisData = new QLabel(this);
+    dataAnalysisData->setText(QString("<a href=\"https://www.telekom.de/impressum/\"><span style=\"color:#ea0a8e\">%1</span></a>").arg(tr("DATA_PROTECTION")));
+    dataAnalysisData->setTextFormat(Qt::RichText);
+    dataAnalysisData->setTextInteractionFlags(Qt::TextBrowserInteraction);
+    dataAnalysisData->setOpenExternalLinks(true);
+    dataAnalysisData->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    dataProtectionBox->layout()->addWidget(dataAnalysisData);
+
+    auto *dataAnalysisOpenSource = new QLabel(this);
+    dataAnalysisOpenSource->setText(QString("<a href=\"https://static.magentacloud.de/licences/windowsdesktop.html\"><span style=\"color:#ea0a8e\">%1</span></a>").arg(tr("LICENCE")));
+    dataAnalysisOpenSource->setTextFormat(Qt::RichText);
+    dataAnalysisOpenSource->setTextInteractionFlags(Qt::TextBrowserInteraction);
+    dataAnalysisOpenSource->setOpenExternalLinks(true);
+    dataAnalysisOpenSource->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    dataProtectionBox->layout()->addWidget(dataAnalysisOpenSource);
+
+    QWidget *versionLabel = new QWidget(this);
+    auto *versionLabelLayout = new QHBoxLayout(this);
+    versionLabel->setLayout(versionLabelLayout);
+    versionLabelLayout->setContentsMargins(0,0,0,0);
+    versionLabel->setSizePolicy(QSizePolicy::Expanding,QSizePolicy::Fixed);
+
+    auto *currentVersion = new QLabel(this);
+    currentVersion->setText(Theme::instance()->about());
+    currentVersion->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    //Todo, set current version
+    versionLabelLayout->addWidget(currentVersion);
+
+    auto *dataAnalysisFurtherInfo = new QLabel(this);
+    dataAnalysisFurtherInfo->setText(QString("<a href=\"https://cloud.telekom-dienste.de/hilfe\"><span style=\"color:#ea0a8e\">%1</span></a>").arg(tr("FURTHER_INFO")));
+    dataAnalysisFurtherInfo->setTextFormat(Qt::RichText);
+    dataAnalysisFurtherInfo->setTextInteractionFlags(Qt::TextBrowserInteraction);
+    dataAnalysisFurtherInfo->setOpenExternalLinks(true);
+    dataAnalysisFurtherInfo->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
+    versionLabelLayout->addWidget(dataAnalysisFurtherInfo);
+    versionLabelLayout->layout()->addItem(new QSpacerItem(1,1,QSizePolicy::Expanding,QSizePolicy::Fixed));
+
+    dataProtectionBox->layout()->addWidget(versionLabel);
+
+    _ui->gridLayout_3->addWidget(dataProtectionBox, 4, 0);
+
+    auto *vExpandSpacer = new QSpacerItem(1,1,QSizePolicy::Fixed,QSizePolicy::Expanding);
+    _ui->gridLayout_3->layout()->addItem(vExpandSpacer);
+}
+
+void NMCGeneralSettings::setLogic()
+{
+
+}
+
+
+} // namespace OCC
diff --git a/src/gui/nmcgui/nmcgeneralsettings.h b/src/gui/nmcgui/nmcgeneralsettings.h
new file mode 100644
index 000000000..2b7158919
--- /dev/null
+++ b/src/gui/nmcgui/nmcgeneralsettings.h
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_GENERALSETTINGSMAGENTA_H
+#define MIRALL_GENERALSETTINGSMAGENTA_H
+
+#include "nmcguiinterface.h"
+#include "generalsettings.h"
+
+namespace OCC {
+
+/**
+ * @brief The GeneralSettingsMagenta class
+ * @ingroup gui
+ */
+class NMCGeneralSettings : public GeneralSettings, public NMCGuiInterface
+{
+    Q_OBJECT
+
+public:
+    explicit NMCGeneralSettings(QWidget *parent = nullptr);
+    ~NMCGeneralSettings() = default;
+
+// NMCGuiInterface interface
+protected:
+    void setDefaultSettings() override final;
+    void setLayout() override final;
+    void setLogic() override final;
+};
+
+
+} // namespace OCC
+#endif // MIRALL_GENERALSETTINGSMAGENTA_H
diff --git a/src/gui/nmcgui/nmcguiinterface.h b/src/gui/nmcgui/nmcguiinterface.h
new file mode 100644
index 000000000..a82ba8759
--- /dev/null
+++ b/src/gui/nmcgui/nmcguiinterface.h
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NMCGUIINTERFACE_H
+#define MIRALL_NMCGUIINTERFACE_H
+
+namespace OCC {
+
+/**
+ * @brief The NMCGuiInterface class
+ * @ingroup gui
+ */
+class NMCGuiInterface
+{
+
+public:
+    explicit NMCGuiInterface() = default;
+    ~NMCGuiInterface() = default;
+
+protected:
+    virtual void setDefaultSettings() = 0;
+    virtual void setLayout() = 0;
+    virtual void setLogic() = 0;
+
+private:
+
+};
+
+
+} // namespace OCC
+#endif // MIRALL_NMCGUIINTERFACE_H
diff --git a/src/gui/nmcgui/nmcnetworksettings.cpp b/src/gui/nmcgui/nmcnetworksettings.cpp
new file mode 100644
index 000000000..a3676220f
--- /dev/null
+++ b/src/gui/nmcgui/nmcnetworksettings.cpp
@@ -0,0 +1,138 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcnetworksettings.h"
+#include "networksettings.h"
+#include "ui_networksettings.h"
+
+
+namespace OCC {
+
+NMCNetworkSettings::NMCNetworkSettings(QWidget *parent)
+    : NetworkSettings(parent)
+{
+    setDefaultSettings();
+    setLayout();
+    setLogic();
+}
+
+void NMCNetworkSettings::setDefaultSettings()
+{
+    //Set default settings
+    _ui->manualSettings->setVisible(true);
+    _ui->manualSettings->setEnabled(false);
+    _ui->downloadSpinBox->setVisible(true);
+    if(_ui->downloadLimitRadioButton->isChecked())
+    {
+        _ui->downloadSpinBox->setEnabled(true);
+    }
+    else{
+        _ui->downloadSpinBox->setEnabled(false);
+    }
+    _ui->downloadSpinBoxLabel->setVisible(true);
+    _ui->uploadSpinBox->setVisible(true);
+    if(_ui->uploadLimitRadioButton->isChecked())
+    {
+        _ui->uploadSpinBox->setEnabled(true);
+    }
+    else{
+        _ui->uploadSpinBox->setEnabled(false);
+    }
+    _ui->uploadSpinBoxLabel->setVisible(true);
+}
+
+void NMCNetworkSettings::setLayout()
+{
+    //Fix Layouts
+    //Proxy settings
+    _ui->manualSettings->layout()->removeItem(_ui->horizontalLayout_8);
+    auto *spinBoxWidget = new QWidget(this);
+    spinBoxWidget->setEnabled(false);
+    spinBoxWidget->setLayout(_ui->horizontalLayout_8);
+    _ui->horizontalLayout_8->setContentsMargins(0,0,0,0);
+    static_cast<QGridLayout *>(_ui->proxyGroupBox->layout())->addWidget(spinBoxWidget, 2, 1);
+    disconnect(_ui->manualProxyRadioButton, &QAbstractButton::toggled, _ui->manualSettings, &QWidget::setVisible);
+    connect(_ui->manualProxyRadioButton, &QAbstractButton::toggled, this, [this, spinBoxWidget](bool checked){
+        _ui->manualSettings->setEnabled(checked);
+        spinBoxWidget->setEnabled(checked);
+    });
+
+    _ui->manualSettings->setContentsMargins(0,0,0,0);
+    _ui->manualSettings->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Preferred);
+    _ui->horizontalSpacer_2->changeSize(0,0, QSizePolicy::Fixed, QSizePolicy::Fixed);
+
+    //Remove spacer, so the elements can expand.
+    _ui->horizontalSpacer->changeSize(0,0, QSizePolicy::Fixed, QSizePolicy::Fixed);
+
+    //DonwloadBox
+    _ui->downloadBox->layout()->removeItem(_ui->horizontalLayout_3);
+    static_cast<QGridLayout *>(_ui->downloadBox->layout())->addItem(_ui->horizontalLayout_3, 3, 1);
+    _ui->verticalSpacer_2->changeSize(0,0, QSizePolicy::Fixed, QSizePolicy::Fixed);
+    _ui->downloadBox->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Preferred);
+    _ui->horizontalLayout_3->setSpacing(5);
+    //UploadBox
+    _ui->uploadBox->layout()->removeItem(_ui->horizontalLayout_4);
+    static_cast<QGridLayout *>(_ui->uploadBox->layout())->addItem(_ui->horizontalLayout_4, 2, 1);
+    _ui->verticalSpacer_3->changeSize(0,0, QSizePolicy::Fixed, QSizePolicy::Fixed);
+    _ui->uploadBox->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Preferred);
+    _ui->horizontalLayout_4->setSpacing(5);
+
+    //Fix widgets visibility
+    //Download settings
+    connect(_ui->noDownloadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->downloadSpinBox->setVisible(true);
+        _ui->downloadSpinBoxLabel->setVisible(true);
+        _ui->downloadSpinBox->setEnabled(false);
+    });
+    connect(_ui->autoDownloadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->downloadSpinBox->setVisible(true);
+        _ui->downloadSpinBoxLabel->setVisible(true);
+        _ui->downloadSpinBox->setEnabled(false);
+    });
+    connect(_ui->downloadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->downloadSpinBox->setVisible(true);
+        _ui->downloadSpinBoxLabel->setVisible(true);
+        _ui->downloadSpinBox->setEnabled(true);
+    });
+
+
+    //Upload settings
+    connect(_ui->noUploadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->uploadSpinBox->setVisible(true);
+        _ui->uploadSpinBoxLabel->setVisible(true);
+        _ui->uploadSpinBox->setEnabled(false);
+    });
+    connect(_ui->autoUploadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->uploadSpinBox->setVisible(true);
+        _ui->uploadSpinBoxLabel->setVisible(true);
+        _ui->uploadSpinBox->setEnabled(false);
+    });
+    connect(_ui->uploadLimitRadioButton, &QAbstractButton::clicked, this, [this](){
+        _ui->uploadSpinBox->setVisible(true);
+        _ui->uploadSpinBoxLabel->setVisible(true);
+        _ui->uploadSpinBox->setEnabled(true);
+    });
+
+    //Fix initial proxy warning, it shows a red border at initial state whenever the widget becomes visible
+    //Override the nextcloud stylesheet
+    _ui->hostLineEdit->setStyleSheet(QString());
+}
+
+void NMCNetworkSettings::setLogic()
+{
+
+}
+
+
+} // namespace OCC
diff --git a/src/gui/nmcgui/nmcnetworksettings.h b/src/gui/nmcgui/nmcnetworksettings.h
new file mode 100644
index 000000000..299f46bca
--- /dev/null
+++ b/src/gui/nmcgui/nmcnetworksettings.h
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NETWORKSETTINGSMAGENTA_H
+#define MIRALL_NETWORKSETTINGSMAGENTA_H
+
+#include "nmcguiinterface.h"
+#include "networksettings.h"
+
+namespace OCC {
+
+/**
+ * @brief The NetworkSettingsMagenta class
+ * @ingroup gui
+ */
+class NMCNetworkSettings : public NetworkSettings, public NMCGuiInterface
+{
+    Q_OBJECT
+
+public:
+    explicit NMCNetworkSettings(QWidget *parent = nullptr);
+    ~NMCNetworkSettings() = default;
+
+// NMCGuiInterface interface
+protected:
+    void setDefaultSettings() override final;
+    void setLayout() override final;
+    void setLogic() override final;
+};
+
+
+} // namespace OCC
+#endif // MIRALL_NETWORKSETTINGSMAGENTA_H
diff --git a/src/gui/nmcgui/nmcsettingsdialog.cpp b/src/gui/nmcgui/nmcsettingsdialog.cpp
new file mode 100644
index 000000000..83fa7b21c
--- /dev/null
+++ b/src/gui/nmcgui/nmcsettingsdialog.cpp
@@ -0,0 +1,113 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcsettingsdialog.h"
+#include "QtWidgets/qtoolbar.h"
+#include "settingsdialog.h"
+
+namespace OCC {
+
+NMCSettingsDialog::NMCSettingsDialog(ownCloudGui *gui, QWidget *parent)
+    : SettingsDialog(gui, parent)
+{
+    setDefaultSettings();
+    setLayout();
+    setLogic();
+}
+
+void NMCSettingsDialog::slotSwitchPage(QAction *action)
+{
+    SettingsDialog::slotSwitchPage(action);
+
+    customizeStyle();
+    if(action->text() == QCoreApplication::translate("OCC::SettingsDialog","General") || action->text() == QCoreApplication::tr("General"))
+    {
+        const QIcon openIcon = QIcon::fromTheme("iconPath", QIcon(":/client/theme/NMCIcons/settings_magenta.svg"));
+        action->setIcon(openIcon);
+    }
+    else if(action->text() == QCoreApplication::translate("OCC::SettingsDialog","Network") || action->text() == QCoreApplication::tr("Network"))
+    {
+        const QIcon openIcon = QIcon::fromTheme("iconPath", QIcon(":/client/theme/NMCIcons/network_magenta.svg"));
+        action->setIcon(openIcon);
+    }
+    else
+    {
+        const QIcon openIcon = QIcon::fromTheme("iconPath", QIcon(":/client/theme/NMCIcons/account_magenta.svg"));
+        action->setIcon(openIcon);
+    }
+
+    //Make sure, text color is correct (magenta or black)
+    setLayout();
+    auto *widget = _toolBar->widgetForAction(action);
+    if(widget)
+    {
+        widget->setStyleSheet(transparentAndMagenta);
+    }
+}
+
+void NMCSettingsDialog::slotAccountAvatarChanged()
+{
+    //Intercept the base class slot, so the round avatar is not set. (so, dont pass to base class)
+
+    //Fix Account button size, for ech new created account
+    fixAccountButton(transparentAndMagenta);
+}
+
+void OCC::NMCSettingsDialog::setDefaultSettings()
+{
+  //Empty
+}
+
+void OCC::NMCSettingsDialog::setLayout()
+{
+    //Fix network and general settings button size
+    const auto actions = _toolBar->actions();
+    for(auto *action : actions)
+    {
+        if((action->text() == QCoreApplication::translate("OCC::SettingsDialog","General") || action->text() == QCoreApplication::tr("General")) ||
+            (action->text() == QCoreApplication::translate("OCC::SettingsDialog","Network") || action->text() == QCoreApplication::tr("Network")) ||
+            (action->text() == QCoreApplication::translate("OCC::SettingsDialog","Account") || action->text() == QCoreApplication::tr("Account")))
+        {
+            auto *widget = _toolBar->widgetForAction(action);
+            if(widget)
+            {
+                widget->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Expanding);
+                widget->setFixedWidth(142);
+                widget->setStyleSheet(transparentAndBlack);
+            }
+        }
+    }
+
+    //Fix initial account btton size and color
+    fixAccountButton(transparentAndBlack);
+}
+
+void OCC::NMCSettingsDialog::setLogic()
+{
+  //Empty
+}
+
+void NMCSettingsDialog::fixAccountButton(QString styleSheet)
+{
+    auto action = _toolBar->actions().at(0);
+    auto *widget = _toolBar->widgetForAction(action);
+    if(widget)
+    {
+        widget->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Expanding);
+        widget->setFixedWidth(142);
+        widget->setStyleSheet(styleSheet);
+    }
+}
+
+} // namespace OCC
diff --git a/src/gui/nmcgui/nmcsettingsdialog.h b/src/gui/nmcgui/nmcsettingsdialog.h
new file mode 100644
index 000000000..7d6780d5f
--- /dev/null
+++ b/src/gui/nmcgui/nmcsettingsdialog.h
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_SETTINGSDIALOGMAGENTA_H
+#define MIRALL_SETTINGSDIALOGMAGENTA_H
+
+#include "nmcgui/nmcguiinterface.h"
+#include <settingsdialog.h>
+
+namespace OCC {
+
+/**
+ * @brief The SettingsDialogMagenta class
+ * @ingroup gui
+ */
+class NMCSettingsDialog : public SettingsDialog, public NMCGuiInterface
+{
+    Q_OBJECT
+
+public:
+    explicit NMCSettingsDialog(ownCloudGui *gui, QWidget *parent = nullptr);
+    ~NMCSettingsDialog() = default;
+
+public slots:
+    void slotSwitchPage(QAction *action) override final;
+    void slotAccountAvatarChanged() override final;
+
+// NMCGuiInterface interface
+protected:
+    void setDefaultSettings() override final;
+    void setLayout() override final;
+    void setLogic() override final;
+
+private:
+    void fixAccountButton(QString styleSheet);
+    QString transparentAndBlack = "background-color: rgba(255, 255, 255, 0)";
+    QString transparentAndMagenta = "background-color: rgba(255, 255, 255, 0); color: #E20074;";
+};
+
+
+} // namespace OCC
+#endif // MIRALL_SETTINGSDIALOGMAGENTA_H
diff --git a/src/gui/owncloudgui.cpp b/src/gui/owncloudgui.cpp
index 6749df8a6..4e8ffd04e 100644
--- a/src/gui/owncloudgui.cpp
+++ b/src/gui/owncloudgui.cpp
@@ -28,7 +28,7 @@
 #include "openfilemanager.h"
 #include "owncloudsetupwizard.h"
 #include "progressdispatcher.h"
-#include "settingsdialog.h"
+#include "nmcgui/nmcsettingsdialog.h"
 #include "theme.h"
 #include "wheelhandler.h"
 #include "syncconflictsmodel.h"
@@ -569,7 +569,7 @@ void ownCloudGui::slotShowGuiMessage(const QString &title, const QString &messag
 void ownCloudGui::slotShowSettings()
 {
     if (_settingsDialog.isNull()) {
-        _settingsDialog = new SettingsDialog(this);
+        _settingsDialog = new NMCSettingsDialog(this);
         _settingsDialog->setAttribute(Qt::WA_DeleteOnClose, true);
         _settingsDialog->show();
     }
diff --git a/src/gui/owncloudgui.h b/src/gui/owncloudgui.h
index 8315fe228..cd4983457 100644
--- a/src/gui/owncloudgui.h
+++ b/src/gui/owncloudgui.h
@@ -33,7 +33,7 @@ namespace OCC {
 
 class Folder;
 
-class SettingsDialog;
+class NMCSettingsDialog;
 class ShareDialog;
 class Application;
 class LogBrowser;
@@ -112,7 +112,7 @@ private slots:
 
 private:
     QPointer<Systray> _tray;
-    QPointer<SettingsDialog> _settingsDialog;
+    QPointer<NMCSettingsDialog> _settingsDialog;
     QPointer<LogBrowser> _logBrowser;
 
 #ifdef WITH_LIBCLOUDPROVIDERS
diff --git a/src/gui/settingsdialog.cpp b/src/gui/settingsdialog.cpp
index 130e5deac..2829fa251 100644
--- a/src/gui/settingsdialog.cpp
+++ b/src/gui/settingsdialog.cpp
@@ -17,9 +17,9 @@
 
 #include "folderman.h"
 #include "theme.h"
-#include "generalsettings.h"
-#include "networksettings.h"
-#include "accountsettings.h"
+#include "nmcgui/nmcgeneralsettings.h"
+#include "nmcgui/nmcnetworksettings.h"
+#include "nmcgui/nmcaccountsettings.h"
 #include "configfile.h"
 #include "progressdispatcher.h"
 #include "owncloudgui.h"
@@ -120,16 +120,16 @@ SettingsDialog::SettingsDialog(ownCloudGui *gui, QWidget *parent)
     QAction *generalAction = createColorAwareAction(QLatin1String(":/client/theme/settings.svg"), tr("General"));
     _actionGroup->addAction(generalAction);
     _toolBar->addAction(generalAction);
-    auto *generalSettings = new GeneralSettings;
+    auto *generalSettings = new NMCGeneralSettings;
     _ui->stack->addWidget(generalSettings);
 
     // Connect styleChanged events to our widgets, so they can adapt (Dark-/Light-Mode switching)
-    connect(this, &SettingsDialog::styleChanged, generalSettings, &GeneralSettings::slotStyleChanged);
+    connect(this, &SettingsDialog::styleChanged, generalSettings, &NMCGeneralSettings::slotStyleChanged);
 
     QAction *networkAction = createColorAwareAction(QLatin1String(":/client/theme/network.svg"), tr("Network"));
     _actionGroup->addAction(networkAction);
     _toolBar->addAction(networkAction);
-    auto *networkSettings = new NetworkSettings;
+    auto *networkSettings = new NMCNetworkSettings;
     _ui->stack->addWidget(networkSettings);
 
     connect(_ui->stack, &QStackedWidget::currentChanged, this, &SettingsDialog::currentPageChanged);
@@ -243,7 +243,7 @@ void SettingsDialog::accountAdded(AccountState *s)
     }
 
     _toolBar->insertAction(_toolBar->actions().at(0), accountAction);
-    auto accountSettings = new AccountSettings(s, this);
+    auto accountSettings = new NMCAccountSettings(s, this);
     QString objectName = QLatin1String("accountSettings_");
     objectName += s->account()->displayName();
     accountSettings->setObjectName(objectName);
@@ -305,7 +305,7 @@ void SettingsDialog::slotAccountDisplayNameChanged()
 void SettingsDialog::accountRemoved(AccountState *s)
 {
     for (auto it = _actionGroupWidgets.begin(); it != _actionGroupWidgets.end(); ++it) {
-        auto as = qobject_cast<AccountSettings *>(*it);
+        auto as = qobject_cast<NMCAccountSettings *>(*it);
         if (!as) {
             continue;
         }
diff --git a/src/gui/settingsdialog.h b/src/gui/settingsdialog.h
index 6034e21bb..8f6315ec7 100644
--- a/src/gui/settingsdialog.h
+++ b/src/gui/settingsdialog.h
@@ -56,8 +56,8 @@ public:
 public slots:
     void showFirstPage();
     void showIssuesList(OCC::AccountState *account);
-    void slotSwitchPage(QAction *action);
-    void slotAccountAvatarChanged();
+    virtual void slotSwitchPage(QAction *action);
+    virtual void slotAccountAvatarChanged();
     void slotAccountDisplayNameChanged();
 
 signals:
@@ -74,14 +74,15 @@ private slots:
     void accountAdded(OCC::AccountState *);
     void accountRemoved(OCC::AccountState *);
 
-private:
+protected:
+    Ui::SettingsDialog *const _ui;
+    QToolBar *_toolBar;
     void customizeStyle();
 
+private:
     QAction *createColorAwareAction(const QString &iconName, const QString &fileName);
     QAction *createActionWithIcon(const QIcon &icon, const QString &text, const QString &iconPath = QString());
 
-    Ui::SettingsDialog *const _ui;
-
     QActionGroup *_actionGroup;
     // Maps the actions from the action group to the corresponding widgets
     QHash<QAction *, QWidget *> _actionGroupWidgets;
@@ -90,8 +91,6 @@ private:
     // case the account avatar changes
     QHash<Account *, QAction *> _actionForAccount;
 
-    QToolBar *_toolBar;
-
     ownCloudGui *_gui;
 };
 }
diff --git a/src/libsync/CMakeLists.txt b/src/libsync/CMakeLists.txt
index fab99be58..819975c38 100644
--- a/src/libsync/CMakeLists.txt
+++ b/src/libsync/CMakeLists.txt
@@ -43,6 +43,8 @@ set(libsync_SRCS
     accessmanager.cpp
     configfile.h
     configfile.cpp
+    nmcconfigfile.h
+    nmcconfigfile.cpp
     abstractnetworkjob.h
     abstractnetworkjob.cpp
     networkjobs.h
diff --git a/src/libsync/configfile.h b/src/libsync/configfile.h
index 21e58412a..1266349a3 100644
--- a/src/libsync/configfile.h
+++ b/src/libsync/configfile.h
@@ -236,12 +236,11 @@ protected:
     [[nodiscard]] QVariant retrieveData(const QString &group, const QString &key) const;
     void removeData(const QString &group, const QString &key);
     [[nodiscard]] bool dataExists(const QString &group, const QString &key) const;
-
-private:
     [[nodiscard]] QVariant getValue(const QString &param, const QString &group = QString(),
         const QVariant &defaultValue = QVariant()) const;
     void setValue(const QString &key, const QVariant &value);
 
+private:
     [[nodiscard]] QString keychainProxyPasswordKey() const;
 
     using SharedCreds = QSharedPointer<AbstractCredentials>;
diff --git a/src/libsync/nmcconfigfile.cpp b/src/libsync/nmcconfigfile.cpp
new file mode 100644
index 000000000..52b5f8694
--- /dev/null
+++ b/src/libsync/nmcconfigfile.cpp
@@ -0,0 +1,49 @@
+/*
+ * Copyright (C) by Eugen Fischer
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#include "nmcconfigfile.h"
+
+namespace{
+    static constexpr char TransferUsageDataC[] = "TransferUsageData";
+}
+
+namespace OCC {
+
+bool NMCConfigFile::transferUsageData(const QString &connection) const
+{
+    QString con(connection);
+    if (connection.isEmpty())
+        con = defaultConnection();
+
+    QVariant fallback = getValue(QLatin1String(TransferUsageDataC), con, false);
+    fallback = getValue(QLatin1String(TransferUsageDataC), QString(), fallback);
+
+    QVariant value = getPolicySetting(QLatin1String(TransferUsageDataC), fallback);
+    return value.toBool();
+}
+
+void NMCConfigFile::setTransferUsageData(bool usageData, const QString &connection)
+{
+    QString con(connection);
+    if (connection.isEmpty())
+        con = defaultConnection();
+
+    QSettings settings(configFile(), QSettings::IniFormat);
+    settings.beginGroup(con);
+
+    settings.setValue(QLatin1String(TransferUsageDataC), QVariant(usageData));
+    settings.sync();
+}
+
+} // namespace OCC
diff --git a/src/libsync/nmcconfigfile.h b/src/libsync/nmcconfigfile.h
new file mode 100644
index 000000000..813460939
--- /dev/null
+++ b/src/libsync/nmcconfigfile.h
@@ -0,0 +1,40 @@
+/*
+ * Copyright (C) by Daniel Molkentin <danimo@owncloud.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
+ * for more details.
+ */
+
+#ifndef MIRALL_NMCCONFIGFILE_H
+#define MIRALL_NMCCONFIGFILE_H
+
+#include "configfile.h"
+
+namespace OCC {
+
+/**
+ * @brief The NMCConfigFile class
+ * @ingroup lib
+ */
+class NMCConfigFile : public ConfigFile
+{
+
+public:
+    explicit NMCConfigFile() = default;
+    ~NMCConfigFile() = default;
+
+    // MagentaCustomization
+    [[nodiscard]] bool transferUsageData(const QString &connection = QString()) const;
+    void setTransferUsageData(bool usageData, const QString &connection);
+};
+
+
+} // namespace OCC
+#endif // MIRALL_NMCCONFIGFILE_H
diff --git a/theme.qrc.in b/theme.qrc.in
index e8d88fc8a..a0e18531c 100644
--- a/theme.qrc.in
+++ b/theme.qrc.in
@@ -218,6 +218,9 @@
         <file>theme/lock-broken.svg</file>
         <file>theme/network.svg</file>
         <file>theme/account.svg</file>
+        <file>theme/NMCIcons/settings_magenta.svg</file>
+        <file>theme/NMCIcons/network_magenta.svg</file>
+        <file>theme/NMCIcons/account_magenta.svg</file>
         <file>theme/colored/add.svg</file>
         <file>theme/colored/add-bordered.svg</file>
         <file>theme/colored/delete.svg</file>
diff --git a/theme/NMCIcons/account_magenta.svg b/theme/NMCIcons/account_magenta.svg
new file mode 100644
index 000000000..9bdca4abc
--- /dev/null
+++ b/theme/NMCIcons/account_magenta.svg
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.3.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#E20074;}
+</style>
+<g id="icon_x2F_user_x5F_file_x2F_user_x2F_default">
+	<path id="Combined-Shape" class="st0" d="M12,22.1l4,4l4-4h2.9c3,0,5.5,2.1,6,5.1l0,0l0.3,1.3H2.9l0.2-1.3c0.5-2.9,3-5.1,6-5.1l0,0
+		H12z M16,3.5c4.5,0,7.7,3.2,7.7,7.7c0,4.4-3.1,9-7.7,9s-7.7-4.6-7.7-9C8.3,6.7,11.5,3.5,16,3.5z M16,5.4c-3.3,0-5.8,2.4-5.8,5.8
+		c0,3.4,2.3,7.1,5.8,7.1s5.8-3.7,5.8-7.1C21.7,7.9,19.3,5.4,16,5.4z"/>
+</g>
+</svg>
diff --git a/theme/NMCIcons/network_magenta.svg b/theme/NMCIcons/network_magenta.svg
new file mode 100644
index 000000000..7dcd34242
--- /dev/null
+++ b/theme/NMCIcons/network_magenta.svg
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#E20074;}
+</style>
+<g id="icon_x2F_home_x2F_wifi_x2F_default-copy">
+	<path id="Combined-Shape" class="st0" d="M16,21.7c1.3,0,2.4,1.1,2.4,2.4c0,1.3-1.1,2.4-2.4,2.4s-2.4-1.1-2.4-2.4
+		C13.6,22.8,14.7,21.7,16,21.7z M16,16.3c2.7,0,5.1,1.4,6.5,3.5l0,0l-1.7,1.8c-0.9-1.7-2.7-2.9-4.7-2.9s-3.8,1.2-4.7,2.9l0,0
+		l-1.7-1.8C10.9,17.7,13.3,16.3,16,16.3z M16,10.9c4.1,0,7.8,1.9,10.2,4.9l0,0l-1.7,1.7c-2-2.6-5-4.2-8.6-4.2S9.4,15,7.4,17.6l0,0
+		l-1.7-1.7C8.2,12.8,11.9,10.9,16,10.9z M16,5.5c5.6,0,10.6,2.5,14,6.4l0,0l-1.7,1.7C25.4,10.1,21,7.9,16,7.9s-9.4,2.2-12.3,5.7l0,0
+		L2,11.9C5.4,8,10.4,5.5,16,5.5z"/>
+</g>
+</svg>
diff --git a/theme/NMCIcons/settings_magenta.svg b/theme/NMCIcons/settings_magenta.svg
new file mode 100644
index 000000000..00dd73be1
--- /dev/null
+++ b/theme/NMCIcons/settings_magenta.svg
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#E20074;}
+</style>
+<g id="icon_x2F_service_x2F_settings_x2F_default-copy">
+	<path id="Combined-Shape" class="st0" d="M18.4,3L19,6.2c0.2,0.9,1.1,1.2,1.8,0.8l0,0l2.7-1.9l3.4,3.4L25,11.2
+		c-0.5,0.7-0.1,1.7,0.8,1.8l0,0l3.2,0.6v4.7L25.8,19c-0.9,0.2-1.2,1.1-0.8,1.8l0,0l1.9,2.7l-3.4,3.4L20.8,25
+		c-0.7-0.5-1.7-0.1-1.8,0.8l0,0L18.4,29h-4.7L13,25.8c-0.2-0.8-1.1-1.2-1.8-0.8l0,0l-2.7,1.9l-3.4-3.4L7,20.8
+		c0.5-0.7,0.1-1.7-0.8-1.8l0,0L3,18.4v-4.7L6.2,13c0.9-0.2,1.2-1.1,0.8-1.8l0,0L5.1,8.5l3.4-3.4L11.2,7c0.7,0.5,1.7,0.1,1.8-0.8l0,0
+		L13.6,3H18.4z M16.9,4.8h-1.8l-0.4,1.8C14.5,8,13.3,9,11.9,9c-0.6,0-1.2-0.2-1.7-0.5l0,0L8.7,7.4L7.4,8.6l1.1,1.5
+		C9.1,11,9.2,12,8.8,13c-0.4,0.9-1.2,1.6-2.2,1.8l0,0l-1.8,0.4V17l1.8,0.3c1,0.2,1.8,0.8,2.2,1.8c0.4,0.9,0.3,2-0.3,2.8l0,0
+		l-1.1,1.5l1.2,1.2l1.5-1.1c0.5-0.4,1.1-0.5,1.7-0.5c1.4,0,2.7,1,2.9,2.4l0,0l0.4,1.8h1.8l0.4-1.8c0.2-1.4,1.5-2.4,2.9-2.4
+		c0.6,0,1.2,0.2,1.7,0.5l0,0l1.5,1.1l1.2-1.2l-1.1-1.5c-0.6-0.8-0.7-1.9-0.3-2.7c0.4-0.9,1.2-1.6,2.2-1.8l0,0l1.8-0.4v-1.8l-1.8-0.4
+		c-1-0.2-1.8-0.8-2.2-1.8c-0.4-0.9-0.3-2,0.3-2.8l0,0l1.1-1.5l-1.2-1.2l-1.5,1.1C21.3,8.8,20.7,9,20.1,9c-1.4,0-2.7-1-2.9-2.4l0,0
+		L16.9,4.8z M16,12.5c2,0,3.5,1.6,3.5,3.5S18,19.5,16,19.5S12.5,18,12.5,16S14,12.5,16,12.5z"/>
+</g>
+</svg>
diff --git a/theme/account.svg b/theme/account.svg
index 597b5ea59..5e7e9e798 100644
--- a/theme/account.svg
+++ b/theme/account.svg
@@ -1,10 +1,13 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<svg xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="64" width="64" version="1.0" xmlns:cc="http://creativecommons.org/ns#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/">
- <defs>
-  <linearGradient id="a" y2="69.127" gradientUnits="userSpaceOnUse" x2="-18.398" gradientTransform="matrix(.93749 0 0 .93750 48.705 -2.957)" y1="5.2866" x1="-18.398">
-   <stop offset="0"/>
-   <stop stop-color="#363636" offset="1"/>
-  </linearGradient>
- </defs>
- <path opacity=".7" style="block-progression:tb;color:#000000;text-transform:none;text-indent:0" d="m32.014 2.0032c-6.4921 0-12 4.7474-12 10.874 0.04608 1.9365 0.21927 4.3246 1.3749 9.3745v0.125l0.12499 0.125c0.37098 1.0626 0.91084 1.6705 1.6249 2.4999 0.71405 0.82937 1.5653 1.8055 2.3749 2.6249 0.09524 0.0964 0.15627 0.15612 0.24995 0.25003 0.16055 0.69862 0.35503 1.4505 0.49998 2.1249 0.38566 1.7943 0.34611 3.065 0.25003 3.4998-2.7899 0.97997-6.2601 2.1463-9.3744 3.5003-1.7483 0.75997-3.3307 1.4404-4.625 2.2483-1.2943 0.81109-2.5815 1.4239-2.9998 3.2498-0.00516 0.08324-0.00516 0.16675 0 0.25003-0.40882 3.7538-1.0272 9.2737-1.4999 13-0.10204 0.78425 0.31131 1.611 0.99996 1.9999 5.6546 3.0543 14.34 4.2835 22.999 4.2499 8.6584-0.0336 17.275-1.3353 22.749-4.2499 0.68865-0.38891 1.102-1.2156 0.99996-1.9999-0.15092-1.1646-0.33631-3.7907-0.49998-6.3746-0.16367-2.584-0.30575-5.1258-0.49994-6.6246-0.06775-0.37155-0.24343-0.72281-0.49998-0.99996-1.7388-2.0763-4.3366-3.3456-7.3745-4.6246-2.7736-1.1679-6.0249-2.3806-9.2496-3.7498-0.18047-0.40203-0.35975-1.5717 0-3.3748 0.0984-0.48318 0.24959-1.002 0.37678-1.4991 0.30279-0.33919 0.53918-0.61678 0.87476-0.99996 0.71597-0.81717 1.4859-1.6747 2.1259-2.4999 0.63997-0.82517 1.16-1.5327 1.4999-2.4999l0.124-0.1248c1.3065-5.273 1.3072-7.4733 1.3749-9.3745v-0.12852c0-6.127-5.5074-10.874-12-10.874z" fill="url(#a)"/>
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.3.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#262626;}
+</style>
+<g id="icon_x2F_user_x5F_file_x2F_user_x2F_default">
+	<path id="Combined-Shape" class="st0" d="M12,22.1l4,4l4-4h2.9c3,0,5.5,2.1,6,5.1l0,0l0.3,1.3H2.9l0.2-1.3c0.5-2.9,3-5.1,6-5.1l0,0
+		H12z M16,3.5c4.5,0,7.7,3.2,7.7,7.7c0,4.4-3.1,9-7.7,9s-7.7-4.6-7.7-9C8.3,6.7,11.5,3.5,16,3.5z M16,5.4c-3.3,0-5.8,2.4-5.8,5.8
+		c0,3.4,2.3,7.1,5.8,7.1s5.8-3.7,5.8-7.1C21.7,7.9,19.3,5.4,16,5.4z"/>
+</g>
 </svg>
diff --git a/theme/network.svg b/theme/network.svg
index 0b0359d2c..7c30d64e7 100644
--- a/theme/network.svg
+++ b/theme/network.svg
@@ -1 +1,15 @@
-<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z"/></svg>
\ No newline at end of file
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#262626;}
+</style>
+<g id="icon_x2F_home_x2F_wifi_x2F_default-copy">
+	<path id="Combined-Shape" class="st0" d="M16,21.7c1.3,0,2.4,1.1,2.4,2.4c0,1.3-1.1,2.4-2.4,2.4s-2.4-1.1-2.4-2.4
+		C13.6,22.8,14.7,21.7,16,21.7z M16,16.3c2.7,0,5.1,1.4,6.5,3.5l0,0l-1.7,1.8c-0.9-1.7-2.7-2.9-4.7-2.9s-3.8,1.2-4.7,2.9l0,0
+		l-1.7-1.8C10.9,17.7,13.3,16.3,16,16.3z M16,10.9c4.1,0,7.8,1.9,10.2,4.9l0,0l-1.7,1.7c-2-2.6-5-4.2-8.6-4.2S9.4,15,7.4,17.6l0,0
+		l-1.7-1.7C8.2,12.8,11.9,10.9,16,10.9z M16,5.5c5.6,0,10.6,2.5,14,6.4l0,0l-1.7,1.7C25.4,10.1,21,7.9,16,7.9s-9.4,2.2-12.3,5.7l0,0
+		L2,11.9C5.4,8,10.4,5.5,16,5.5z"/>
+</g>
+</svg>
diff --git a/theme/settings.svg b/theme/settings.svg
index f53024e88..8a58aa931 100644
--- a/theme/settings.svg
+++ b/theme/settings.svg
@@ -1 +1,20 @@
-<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><g><path d="M0,0h24v24H0V0z" fill="none"/><path d="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/></g></svg>
\ No newline at end of file
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 26.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill-rule:evenodd;clip-rule:evenodd;fill:#262626;}
+</style>
+<g id="icon_x2F_service_x2F_settings_x2F_default-copy">
+	<path id="Combined-Shape" class="st0" d="M18.4,3L19,6.2c0.2,0.9,1.1,1.2,1.8,0.8l0,0l2.7-1.9l3.4,3.4L25,11.2
+		c-0.5,0.7-0.1,1.7,0.8,1.8l0,0l3.2,0.6v4.7L25.8,19c-0.9,0.2-1.2,1.1-0.8,1.8l0,0l1.9,2.7l-3.4,3.4L20.8,25
+		c-0.7-0.5-1.7-0.1-1.8,0.8l0,0L18.4,29h-4.7L13,25.8c-0.2-0.8-1.1-1.2-1.8-0.8l0,0l-2.7,1.9l-3.4-3.4L7,20.8
+		c0.5-0.7,0.1-1.7-0.8-1.8l0,0L3,18.4v-4.7L6.2,13c0.9-0.2,1.2-1.1,0.8-1.8l0,0L5.1,8.5l3.4-3.4L11.2,7c0.7,0.5,1.7,0.1,1.8-0.8l0,0
+		L13.6,3H18.4z M16.9,4.8h-1.8l-0.4,1.8C14.5,8,13.3,9,11.9,9c-0.6,0-1.2-0.2-1.7-0.5l0,0L8.7,7.4L7.4,8.6l1.1,1.5
+		C9.1,11,9.2,12,8.8,13c-0.4,0.9-1.2,1.6-2.2,1.8l0,0l-1.8,0.4v1.8l1.8,0.3c1,0.2,1.8,0.8,2.2,1.8c0.4,0.9,0.3,2-0.3,2.8l0,0
+		l-1.1,1.5l1.2,1.2l1.5-1.1c0.5-0.4,1.1-0.5,1.7-0.5c1.4,0,2.7,1,2.9,2.4l0,0l0.4,1.8h1.8l0.4-1.8c0.2-1.4,1.5-2.4,2.9-2.4
+		c0.6,0,1.2,0.2,1.7,0.5l0,0l1.5,1.1l1.2-1.2l-1.1-1.5c-0.6-0.8-0.7-1.9-0.3-2.7c0.4-0.9,1.2-1.6,2.2-1.8l0,0l1.8-0.4v-1.8l-1.8-0.4
+		c-1-0.2-1.8-0.8-2.2-1.8c-0.4-0.9-0.3-2,0.3-2.8l0,0l1.1-1.5l-1.2-1.2l-1.5,1.1C21.3,8.8,20.7,9,20.1,9c-1.4,0-2.7-1-2.9-2.4l0,0
+		L16.9,4.8z M16,12.5c2,0,3.5,1.6,3.5,3.5S18,19.5,16,19.5S12.5,18,12.5,16S14,12.5,16,12.5z"/>
+</g>
+</svg>
